/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PrecioMP;

import Modelos.PrecioMP;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.PrecioMP_servicio;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class AgregarPrecioMP extends javax.swing.JFrame {

    private final PrecioMP_servicio precioMP_servicio = new PrecioMP_servicio();
    private final PrecioMP precio;
    Usuarios mod;
    Connection conexion;

    /**/

    public AgregarPrecioMP() throws SQLException, ClassNotFoundException {
        this.conexion = Conexion.getInstance().getConnection();
        initComponents();
        this.setResizable(false);
        this.setDefaultCloseOperation(0);
        this.precio = new PrecioMP();
        String calibre = txtCalibre.getText();
        Statement comando;
        try {
            comando = conexion.createStatement();
            ResultSet registro = comando.executeQuery("SELECT nombre FROM proveedores");
            while (registro.next()) {
                String columna = registro.getString("nombre");
                chcProveedor.addItem(columna);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AgregarPrecioMP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public AgregarPrecioMP(Usuarios mod) throws SQLException, ClassNotFoundException {
        initComponents();
        this.setResizable(false);
        this.setDefaultCloseOperation(0);
        this.precio = new PrecioMP();
        this.mod = mod;
        this.conexion = Conexion.getInstance().getConnection();
        String calibre = txtCalibre.getText();
        Statement comando;
        try {
            comando = conexion.createStatement();
            ResultSet registro = comando.executeQuery("SELECT DISTINCT nombre FROM proveedores");
            while (registro.next()) {
                String columna = registro.getString("nombre");
                chcProveedor.addItem(columna);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AgregarPrecioMP.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("jc/img/jc.png"));

        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtPU = new javax.swing.JTextField();
        lblPU = new javax.swing.JLabel();
        lblMoneda = new javax.swing.JLabel();
        txtMoneda = new javax.swing.JTextField();
        lblMoneda1 = new javax.swing.JLabel();
        chcProveedor = new java.awt.Choice();
        lblJCIcono = new javax.swing.JLabel();
        txtCalibre = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        lblAgregar = new javax.swing.JLabel();
        lblPrecioMP = new javax.swing.JLabel();
        lblCalibre = new javax.swing.JLabel();
        btnGuardarPrecio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(135, 206, 235));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPU.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txtPU, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 200, -1));

        lblPU.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPU.setText("P. U. (KG):");
        jPanel1.add(lblPU, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        lblMoneda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMoneda.setText("MONEDA:");
        jPanel1.add(lblMoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        txtMoneda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txtMoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 200, -1));

        lblMoneda1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMoneda1.setText("PROVEEDOR:");
        jPanel1.add(lblMoneda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        chcProveedor.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        chcProveedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chcProveedorItemStateChanged(evt);
            }
        });
        jPanel1.add(chcProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 210, -1));

        lblJCIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        jPanel1.add(lblJCIcono, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtCalibre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCalibre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCalibreActionPerformed(evt);
            }
        });
        txtCalibre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCalibreKeyTyped(evt);
            }
        });
        jPanel1.add(txtCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 200, -1));

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 140, -1));

        lblAgregar.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        lblAgregar.setText("AGREGAR");
        jPanel1.add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 250, 50));

        lblPrecioMP.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        lblPrecioMP.setText("PRECIO M. P.");
        jPanel1.add(lblPrecioMP, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 250, 40));

        lblCalibre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCalibre.setText("CALIBRE:");
        jPanel1.add(lblCalibre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        btnGuardarPrecio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardarPrecio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/Guardar.png"))); // NOI18N
        btnGuardarPrecio.setText("GUARDAR");
        btnGuardarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPrecioActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardarPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 140, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPrecioActionPerformed
        String calibre = txtCalibre.getText();
        String precioUni = txtPU.getText();
        String moneda = txtMoneda.getText();
        String proveedor = chcProveedor.getSelectedItem();
        if (!calibre.trim().equals("")) {
            float f = Float.parseFloat(precioUni);
            this.precio.setCalibre(calibre);
            this.precio.setPesoUnitario(f);
            this.precio.setMoneda(moneda);
            this.precio.setProveedor(proveedor);
            try {
                this.precioMP_servicio.agregar(conexion, this.precio);
                JOptionPane.showMessageDialog(this, "DATOS GUARDADOS.");
                AgregarPrecioMP.this.dispose();
                PrecioMPGUI pmp = new PrecioMPGUI(mod);
                pmp.setVisible(true);
                pmp.setLocationRelativeTo(null);

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, "Ha surgido un error y no se ha podido guardar el registro.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "HAY CAMPOS INCOMPLETOS.");
        }
    }//GEN-LAST:event_btnGuardarPrecioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        AgregarPrecioMP.this.dispose();
        PrecioMPGUI pmp = new PrecioMPGUI(mod);
        pmp.setVisible(true);
        pmp.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCalibreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalibreKeyTyped
    }//GEN-LAST:event_txtCalibreKeyTyped

    private void chcProveedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chcProveedorItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chcProveedorItemStateChanged

    private void txtCalibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCalibreActionPerformed

    }//GEN-LAST:event_txtCalibreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarPrecioMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarPrecioMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarPrecioMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarPrecioMP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new AgregarPrecioMP().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(AgregarPrecioMP.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AgregarPrecioMP.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardarPrecio;
    private java.awt.Choice chcProveedor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblCalibre;
    private javax.swing.JLabel lblJCIcono;
    private javax.swing.JLabel lblMoneda;
    private javax.swing.JLabel lblMoneda1;
    private javax.swing.JLabel lblPU;
    private javax.swing.JLabel lblPrecioMP;
    private javax.swing.JTextField txtCalibre;
    private javax.swing.JTextField txtMoneda;
    private javax.swing.JTextField txtPU;
    // End of variables declaration//GEN-END:variables
}
